# Environment Configuration for Live Trading Bot
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control

# ===================================
# Hyperliquid API Credentials
# ===================================
# Your Hyperliquid wallet address (public key)
HYPERLIQUID_WALLET_ADDRESS=your_wallet_address_here

# Your wallet's private key (hex string) - KEEP THIS SECRET
HYPERLIQUID_PRIVATE_KEY=your_private_key_here

# Toggle between testnet and mainnet (true/false)
# IMPORTANT: Always test on testnet first before going live!
# 
# Testnet Setup Instructions:
# 1. Create a new wallet (or use existing) - NEVER use your mainnet wallet with real funds
# 2. Get testnet USDC from the faucet: https://app.hyperliquid-testnet.xyz/drip
# 3. Set HYPERLIQUID_TESTNET=true below
# 4. Run the bot and verify it connects to testnet (check startup logs)
# 5. Test all features with mock funds before switching to mainnet
# 
# To switch to mainnet (REAL FUNDS):
# 1. Set HYPERLIQUID_TESTNET=false
# 2. Use your mainnet wallet credentials
# 3. Start with small positions and conservative risk settings
HYPERLIQUID_TESTNET=true

# ===================================
# DeepSeek API Credentials
# ===================================
# Your DeepSeek API key from https://platform.deepseek.com
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# ===================================
# Trading Bot Configuration
# ===================================
# How often the bot runs (in minutes)
# Recommended: 3 for active trading, 5-15 for less frequent
TRADING_INTERVAL_MINUTES=3

# Maximum leverage allowed (e.g., 10 for 10x leverage)
MAX_LEVERAGE=10

# Maximum risk per trade as percentage of account (e.g., 2.0 for 2%)
RISK_PER_TRADE_PERCENT=2.0

# Kill-switch threshold: stop trading if drawdown exceeds this percentage
MAX_DRAWDOWN_PERCENT=20.0

# Maximum total exposure as percentage of account (e.g., 200.0 for 200% = 2x aggregate leverage)
MAX_TOTAL_EXPOSURE_PERCENT=200.0

# Minimum position size in USD to prevent dust trades
MIN_POSITION_SIZE_USD=10.0

# Maximum single position size as percentage of account (e.g., 50.0 for 50%)
MAX_SINGLE_POSITION_PERCENT=50.0

# Comma-separated list of symbols to trade (e.g., BTC,ETH,SOL,BNB,XRP,DOGE)
# Leave empty to trade all available symbols
TRADING_SYMBOLS=BTC,ETH,SOL,BNB,XRP,DOGE

# Path to bot state file for persisting position metadata
STATE_FILE_PATH=./data/bot_state.json

# Enable strategy consultation for signal validation (true/false)
# If true, momentum, mean reversion, and ML strategies will be consulted
# AI decision always takes precedence
ENABLE_STRATEGY_CONSULTATION=false

# ===================================
# Order Execution Configuration
# ===================================
# Order execution type for entry orders: market, limit_ioc, or limit_gtc
# - market: Emulates market order with aggressive limit IOC (recommended for immediate fills)
# - limit_ioc: Limit order with immediate-or-cancel (IOC) with configurable price offset
# - limit_gtc: Good-til-cancelled limit order at mark price (may not fill immediately)
ORDER_EXECUTION_TYPE=market

# Price offset percentage for entry orders (as decimal, e.g., 0.001 = 0.1%)
# Used for market and limit_ioc execution types to ensure fills
# For buys: order_price = mark * (1 + ENTRY_CROSS_PCT)
# For sells: order_price = mark * (1 - ENTRY_CROSS_PCT)
ENTRY_CROSS_PCT=0.001

# Price offset percentage for IOC exit orders (stop-loss and take-profit)
# Larger offset = more likely to fill but worse price
# For stop-loss sells: price = mark * (1 - IOC_CROSS_PCT)
# For stop-loss buys: price = mark * (1 + IOC_CROSS_PCT)
IOC_CROSS_PCT=0.005

# ===================================
# Optional Configuration
# ===================================
# Logging verbosity for console output: DEBUG, INFO, WARNING, ERROR
# This controls Python's logging module output, not the trade/chat logs
LOG_LEVEL=INFO

# ===================================
# Logging Configuration
# ===================================
# Path to SQLite database for trade and decision logs
# The database stores structured data for querying and analysis
DATABASE_PATH=./data/trades.db

# Path to chat log file for AI reasoning messages
# This is a human-readable text file with timestamped messages
CHAT_LOG_PATH=./data/chat_log.txt

# Maximum size of chat log file before rotation (in MB)
# When exceeded, the log is rotated to a timestamped backup file
CHAT_LOG_MAX_SIZE_MB=10

# Number of rotated chat log files to keep
# Older files are automatically deleted
CHAT_LOG_RETENTION_COUNT=10

# ===================================
# Dashboard Configuration
# ===================================
# Web dashboard host (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
# Set to `0.0.0.0` to access from other devices on network, `127.0.0.1` for local-only access
DASHBOARD_HOST=0.0.0.0

# Web dashboard port
# Port for web dashboard (default 8000, change if port is already in use)
DASHBOARD_PORT=8000

# CLI dashboard refresh interval (seconds)
# How often CLI dashboard updates in live mode (seconds)
DASHBOARD_REFRESH_INTERVAL=30

# Enable WebSocket for real-time updates (true/false)
# If false, uses polling instead
# Use WebSocket for push updates (more efficient) or polling (simpler)
DASHBOARD_ENABLE_WEBSOCKET=true
